/*
 Language: Teradata SQL
 Website: https://www.teradata.com/
 Category: common, database
 */

 var module = module ? module : {};     // shim for browser use

 function hljsDefineTeradataSql(hljs) {
   console.log(`hljs: {hljs}`);
   const regex = hljs.regex;
   const COMMENT_MODE = hljs.COMMENT('--', '$');
   const STRING = {
     className: 'string',
     variants: [
       {
         begin: /'/,
         end: /'/,
         contains: [
           {begin: /''/ }
         ]
       }
     ]
   };
   const QUOTED_IDENTIFIER = {
     begin: /"/,
     end: /"/,
     contains: [ { begin: /""/ } ]
   };

   const LITERALS = [
     "true",
     "false",
     // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.
     // "null",
     "unknown"
   ];

   const MULTI_WORD_TYPES = [
     "double precision",
     "large object",
     "with timezone",
     "without timezone",
     // Teradata addition
     "with data",
   ];

   const TYPES = [
     'bigint',
     'binary',
     'blob',
     'boolean',
     'char',
     'character',
     'clob',
     'date',
     'dec',
     'decfloat',
     'decimal',
     'float',
     'int',
     'integer',
     'interval',
     'nchar',
     'nclob',
     'national',
     'numeric',
     'real',
     'row',
     'smallint',
     'time',
     'timestamp',
     'varchar',
     'varying', // modifier (character varying)
     'varbinary',
     // Teradata additions
     // https://docs.teradata.com/r/Teradata-VantageTM-Database-Introduction/July-2021/SQL/SQL-Data-Types/Data-Types
     'array',
     'varray',
     'byte',
     'varbyte',
     'blob',
     'char',
     'varchar',
     'clob',
     'avro',
     'csv',
     'date',
     'time',
     'timestamp',
     'time with time zone',
     'timestamp with time zone',
     'st_geometry',
     'mbr',
     'interval year',
     'byteint',


   ];

   const NON_RESERVED_WORDS = [
     "add",
     "asc",
     "collation",
     "desc",
     "final",
     "first",
     "last",
     "view",
   ];

   const RESERVED_WORDS = [
     "abs",
     "acos",
     "all",
     "allocate",
     "alter",
     "and",
     "any",
     "are",
     "array",
     "array_agg",
     "array_max_cardinality",
     "as",
     "asensitive",
     "asin",
     "asymmetric",
     "at",
     "atan",
     "atomic",
     "authorization",
     "avg",
     "begin",
     "begin_frame",
     "begin_partition",
     "between",
     "bigint",
     "binary",
     "blob",
     "boolean",
     "both",
     "by",
     "call",
     "called",
     "cardinality",
     "cascaded",
     "case",
     "cast",
     "ceil",
     "ceiling",
     "char",
     "char_length",
     "character",
     "character_length",
     "check",
     "classifier",
     "clob",
     "close",
     "coalesce",
     "collate",
     "collect",
     "column",
     "commit",
     "condition",
     "connect",
     "constraint",
     "contains",
     "convert",
     "copy",
     "corr",
     "corresponding",
     "cos",
     "cosh",
     "count",
     "covar_pop",
     "covar_samp",
     "create",
     "cross",
     "cube",
     "cume_dist",
     "current",
     "current_catalog",
     "current_date",
     "current_default_transform_group",
     "current_path",
     "current_role",
     "current_row",
     "current_schema",
     "current_time",
     "current_timestamp",
     "current_path",
     "current_role",
     "current_transform_group_for_type",
     "current_user",
     "cursor",
     "cycle",
     "date",
     "day",
     "deallocate",
     "dec",
     "decimal",
     "decfloat",
     "declare",
     "default",
     "define",
     "delete",
     "dense_rank",
     "deref",
     "describe",
     "deterministic",
     "disconnect",
     "distinct",
     "double",
     "drop",
     "dynamic",
     "each",
     "element",
     "else",
     "empty",
     "end",
     "end_frame",
     "end_partition",
     "end-exec",
     "equals",
     "escape",
     "every",
     "except",
     "exec",
     "execute",
     "exists",
     "exp",
     "external",
     "extract",
     "false",
     "fetch",
     "filter",
     "first_value",
     "float",
     "floor",
     "for",
     "foreign",
     "frame_row",
     "free",
     "from",
     "full",
     "function",
     "fusion",
     "get",
     "global",
     "grant",
     "group",
     "grouping",
     "groups",
     "having",
     "hold",
     "hour",
     "identity",
     "in",
     "indicator",
     "initial",
     "inner",
     "inout",
     "insensitive",
     "insert",
     "int",
     "integer",
     "intersect",
     "intersection",
     "interval",
     "into",
     "is",
     "join",
     "json_array",
     "json_arrayagg",
     "json_exists",
     "json_object",
     "json_objectagg",
     "json_query",
     "json_table",
     "json_table_primitive",
     "json_value",
     "lag",
     "language",
     "large",
     "last_value",
     "lateral",
     "lead",
     "leading",
     "left",
     "like",
     "like_regex",
     "listagg",
     "ln",
     "local",
     "localtime",
     "localtimestamp",
     "log",
     "log10",
     "lower",
     "match",
     "match_number",
     "match_recognize",
     "matches",
     "max",
     "member",
     "merge",
     "method",
     "min",
     "minute",
     "mod",
     "modifies",
     "module",
     "month",
     "multiset",
     "national",
     "natural",
     "nchar",
     "nclob",
     "new",
     "no",
     "none",
     "normalize",
     "not",
     "nth_value",
     "ntile",
     "null",
     "nullif",
     "numeric",
     "octet_length",
     "occurrences_regex",
     "of",
     "offset",
     "old",
     "omit",
     "on",
     "one",
     "only",
     "open",
     "or",
     "order",
     "out",
     "outer",
     "over",
     "overlaps",
     "overlay",
     "parameter",
     "partition",
     "pattern",
     "per",
     "percent",
     "percent_rank",
     "percentile_cont",
     "percentile_disc",
     "period",
     "portion",
     "position",
     "position_regex",
     "power",
     "precedes",
     "precision",
     "prepare",
     "primary",
     "procedure",
     "ptf",
     "range",
     "rank",
     "reads",
     "real",
     "recursive",
     "ref",
     "references",
     "referencing",
     "regr_avgx",
     "regr_avgy",
     "regr_count",
     "regr_intercept",
     "regr_r2",
     "regr_slope",
     "regr_sxx",
     "regr_sxy",
     "regr_syy",
     "release",
     "result",
     "return",
     "returns",
     "revoke",
     "right",
     "rollback",
     "rollup",
     "row",
     "row_number",
     "rows",
     "running",
     "savepoint",
     "scope",
     "scroll",
     "search",
     "second",
     "seek",
     "select",
     "sensitive",
     "session_user",
     "set",
     "show",
     "similar",
     "sin",
     "sinh",
     "skip",
     "smallint",
     "some",
     "specific",
     "specifictype",
     "sql",
     "sqlexception",
     "sqlstate",
     "sqlwarning",
     "sqrt",
     "start",
     "static",
     "stddev_pop",
     "stddev_samp",
     "submultiset",
     "subset",
     "substring",
     "substring_regex",
     "succeeds",
     "sum",
     "symmetric",
     "system",
     "system_time",
     "system_user",
     "table",
     "tablesample",
     "tan",
     "tanh",
     "then",
     "time",
     "timestamp",
     "timezone_hour",
     "timezone_minute",
     "to",
     "trailing",
     "translate",
     "translate_regex",
     "translation",
     "treat",
     "trigger",
     "trim",
     "trim_array",
     "true",
     "truncate",
     "uescape",
     "union",
     "unique",
     "unknown",
     "unnest",
     "update",
     "upper",
     "user",
     "using",
     "value",
     "values",
     "value_of",
     "var_pop",
     "var_samp",
     "varbinary",
     "varchar",
     "varying",
     "versioning",
     "when",
     "whenever",
     "where",
     "width_bucket",
     "window",
     "with",
     "within",
     "without",
     "year",
     // Teradata keywords
     'abort',
     'abortsession',
     'abs',
     'access_lock',
     'account',
     'acos',
     'acosh',
     'add',
     'add_months',
     'admin',
     'after',
     'aggregate',
     'all',
     'alter',
     'amp',
     'and',
     'ansidate',
     'any',
     'as',
     'asc',
     'asin',
     'asinh',
     'at',
     'atan',
     'atan2',
     'atanh',
     'atomic',
     'authorization',
     'ave',
     'average',
     'avg',
     'before',
     'begin',
     'between',
     'bigint',
     'binary',
     'blob',
     'both',
     'bt',
     'but',
     'by',
     'byte',
     'bytes',
     'call',
     'case',
     'case_n',
     'casespecific',
     'cast',
     'cd',
     'char',
     'char_length',
     'char2hexint',
     'character',
     'character_length',
     'characters',
     'chars',
     'check',
     'checkpoint',
     'class',
     'clob',
     'close',
     'cluster',
     'cm',
     'coalesce',
     'collation',
     'collect',
     'column',
     'comment',
     'commit',
     'compress',
     'connect',
     'constraint',
     'constructor',
     'consume',
     'contains',
     'continue',
     'convert_table_header',
     'corr',
     'cos',
     'cosh',
     'count',
     'covar_pop',
     'covar_samp',
     'create',
     'cross',
     'cs',
     'csum',
     'ct',
     'ctcontrol',
     'cube',
     'current',
     'current_date',
     'current_role',
     'current_time',
     'current_timestamp',
     'current_user',
     'cursor',
     'cv',
     'cycle',
     'database',
     'datablocksize',
     'date',
     'dateform',
     'day',
     'deallocate',
     'dec',
     'decimal',
     'declare',
     'default',
     'deferred',
     'degrees',
     'del',
     'delete',
     'desc',
     'deterministic',
     'diagnostic',
     'disabled',
     'distinct',
     'do',
     'domain',
     'double',
     'drop',
     'dual',
     'dump',
     'dynamic',
     'each',
     'echo',
     'else',
     'elseif',
     'enabled',
     'end',
     'eq',
     'equals',
     'error',
     'errorfiles',
     'errortables',
     'escape',
     'et',
     'except',
     'exec',
     'execute',
     'exists',
     'exit',
     'exp',
     'expand',
     'expanding',
     'explain',
     'external',
     'extract',
     'fallback',
     'fastexport',
     'fetch',
     'first',
     'float',
     'for',
     'foreign',
     'format',
     'found',
     'freespace',
     'from',
     'full',
     'function',
     'ge',
     'generated',
     'get',
     'give',
     'grant',
     'graphic',
     'group',
     'grouping',
     'gt',
     'handler',
     'hash',
     'hashamp',
     'hashbakamp',
     'hashbucket',
     'hashrow',
     'having',
     'help',
     'hour',
     'identity',
     'id2bigint',
     'if',
     'immediate',
     'in',
     'inconsistent',
     'index',
     'initiate',
     'inner',
     'inout',
     'input',
     'ins',
     'insert',
     'instance',
     'instead',
     'int',
     'integer',
     'integerdate',
     'intersect',
     'interval',
     'into',
     'is',
     'iterate',
     'jar',
     'join',
     'journal',
     'key',
     'kurtosis',
     'language',
     'large',
     'le',
     'leading',
     'leave',
     'left',
     'like',
     'limit',
     'ln',
     'loading',
     'local',
     'locator',
     'lock',
     'locking',
     'log',
     'logging',
     'logon',
     'long',
     'loop',
     'lower',
     'lt',
     'macro',
     'map',
     'mavg',
     'max',
     'maximum',
     'mcharacters',
     'mdiff',
     'merge',
     'method',
     'min',
     'mindex',
     'minimum',
     'minus',
     'minute',
     'mlinreg',
     'mload',
     'mod',
     'mode',
     'modifies',
     'modify',
     'monitor',
     'monresource',
     'monsession',
     'month',
     'msubstr',
     'msum',
     'multiset',
     'named',
     'natural',
     'ne',
     'new',
     'new_table',
     'next',
     'no',
     'none',
     'nontemporal',
     'normalize',
     'nosync',
     'not',
     'nowait',
     'null',
     'nullif',
     'nullifzero',
     'number',
     'numeric',
     'object',
     'objects',
     'octet_length',
     'of',
     'off',
     'old',
     'old_table',
     'on',
     'only',
     'open',
     'option',
     'or',
     'order',
     'ordering',
     'out',
     'outer',
     'over',
     'overlaps',
     'override',
     'parameter',
     'password',
     'percent',
     'percent_rank',
     'perm',
     'permanent',
     'plan_directive',
     'position',
     'precision',
     'prepare',
     'preserve',
     'primary',
     'privileges',
     'procedure',
     'profile',
     'protection',
     'public',
     'qualified',
     'qualify',
     'quantile',
     'queue',
     'radians',
     'random',
     'range_n',
     'rank',
     'reads',
     'real',
     'recursive',
     'references',
     'referencing',
     'regr_avgx',
     'regr_avgy',
     'regr_count',
     'regr_intercept',
     'regr_r2',
     'regr_slope',
     'regr_sxx',
     'regr_sxy',
     'regr_syy',
     'relative',
     'release',
     'rename',
     'repeat',
     'replace',
     'replcontrol',
     'replication',
     'request',
     'resignal',
     'restart',
     'restore',
     'result',
     'resume',
     'ret',
     'retrieve',
     'return',
     'returns',
     'revalidate',
     'revoke',
     'right',
     'rights',
     'role',
     'rollback',
     'rollforward',
     'rollup',
     'row',
     'row_number',
     'rowid',
     'rows',
     'sample',
     'sampleid',
     'scroll',
     'second',
     'sel',
     'select',
     'session',
     'set',
     'setresrate',
     'sets',
     'setsessrate',
     'show',
     'signal',
     'sin',
     'sinh',
     'skew',
     'smallint',
     'some',
     'soundex',
     'specific',
     'spool',
     'sql',
     'sqlexception',
     'sqltext',
     'sqlwarning',
     'sqrt',
     'ss',
     'start',
     'startup',
     'statement',
     'statistics',
     'stddev_pop',
     'stddev_samp',
     'stepinfo',
     'string_cs',
     'subscriber',
     'substr',
     'substring',
     'sum',
     'summary',
     'suspend',
     'table',
     'tan',
     'tanh',
     'tbl_cs',
     'td_anytype',
     'td_authid',
     'td_host',
     'td_rowloadid',
     'td_valist',
     'temporary',
     'terminate',
     'then',
     'threshold',
     'time',
     'timestamp',
     'timezone_hour',
     'timezone_minute',
     'title',
     'to',
     'top',
     'trace',
     'trailing',
     'transaction',
     'transactiontime',
     'transform',
     'translate',
     'translate_chk',
     'trigger',
     'trim',
     'type',
     'uc',
     'udtcastas',
     'udtcastlparen',
     'udtmethod',
     'udttype',
     'udtusage',
     'uescape',
     'undefined',
     'undo',
     'union',
     'unique',
     'until',
     'until_changed',
     'until_closed',
     'upd',
     'update',
     'upper',
     'uppercase',
     'user',
     'using',
     'validtime',
     'value',
     'values',
     'var_pop',
     'var_samp',
     'varbyte',
     'varchar',
     'vargraphic',
     'variant_type',
     'varying',
     'view',
     'volatile',
     'when',
     'where',
     'while',
     'width_bucket',
     'with',
     'without',
     'work',
     'xmlplan',
     'year',
     'zeroifnull',
     'zone',
   ];

   // these are reserved words we have identified to be functions
   // and should only be highlighted in a dispatch-like context
   // ie, array_agg(...), etc.
   const RESERVED_FUNCTIONS = [
     "abs",
     "acos",
     "array_agg",
     "asin",
     "atan",
     "avg",
     "cast",
     "ceil",
     "ceiling",
     "coalesce",
     "corr",
     "cos",
     "cosh",
     "count",
     "covar_pop",
     "covar_samp",
     "cume_dist",
     "dense_rank",
     "deref",
     "element",
     "exp",
     "extract",
     "first_value",
     "floor",
     "json_array",
     "json_arrayagg",
     "json_exists",
     "json_object",
     "json_objectagg",
     "json_query",
     "json_table",
     "json_table_primitive",
     "json_value",
     "lag",
     "last_value",
     "lead",
     "listagg",
     "ln",
     "log",
     "log10",
     "lower",
     "max",
     "min",
     "mod",
     "nth_value",
     "ntile",
     "nullif",
     "percent_rank",
     "percentile_cont",
     "percentile_disc",
     "position",
     "position_regex",
     "power",
     "rank",
     "regr_avgx",
     "regr_avgy",
     "regr_count",
     "regr_intercept",
     "regr_r2",
     "regr_slope",
     "regr_sxx",
     "regr_sxy",
     "regr_syy",
     "row_number",
     "sin",
     "sinh",
     "sqrt",
     "stddev_pop",
     "stddev_samp",
     "substring",
     "substring_regex",
     "sum",
     "tan",
     "tanh",
     "translate",
     "translate_regex",
     "treat",
     "trim",
     "trim_array",
     "unnest",
     "upper",
     "value_of",
     "var_pop",
     "var_samp",
     "width_bucket",
     // Teradata addition
     'agggeom',
     'agggeomintersection',
     'agggeomunion',
     'array_add',
     'array_agg',
     'array_avg',
     'array_compare',
     'array_concat',
     'array_count_distinct',
     'array_div',
     'array_eq',
     'array_ge',
     'array_get',
     'array_gt',
     'array_le',
     'array_lt',
     'array_max',
     'array_min',
     'array_mod',
     'array_mul',
     'array_ne',
     'array_sub',
     'array_sum',
     'array_to_json',
     'array_update',
     'array_update_stride',
     'ascii',
     'as_shredtb',
     'as_shred_generate_sql',
     'as_shred_gettables',
     'avrocontainersplit',
     'avro_check',
     'bitand',
     'bitnot',
     'bitor',
     'bitxor',
     'bson_check',
     'calcmatrix',
     'calcmatrix_contract',
     'camset',
     'camset_l',
     'cardinality',
     'ceil',
     'ceiling',
     'chr',
     'countset',
     'createdataset',
     'createxml',
     'csv',
     'csvld',
     'csv_to_avro',
     'csv_to_json',
     'dataset_keys',
     'dataset_publish',
     'dataset_table',
     'datasize',
     'daynumber_of_calendar',
     'daynumber_of_month',
     'daynumber_of_week',
     'daynumber_of_year',
     'dayoccurrence_of_month',
     'dbqldecodeobj',
     'decamset',
     'decamset_l',
     'decode',
     'editdistance',
     'empty_blob',
     'empty_clob',
     'floor',
     'from_bytes',
     'from_mgrs',
     'fsysshowblocks',
     'fsysshowblocks_contract',
     'fsysshowinner',
     'fsysshowwhere',
     'fsysshowwhere_contract',
     'geojsonfromgeom',
     'geometrytorows',
     'geomfromgeojson',
     'geosequencefromrows',
     'geosequencetorows',
     'getbit',
     'getcurrentpxyroles',
     'getpsfversion',
     'getquerybandvaluesf',
     'greatest',
     'initcap',
     'instr',
     'jsongetvalue',
     'jsonmetadata',
     'json_agg',
     'json_check',
     'json_compose',
     'json_compress',
     'json_decompress',
     'json_keys',
     'json_publish',
     'json_shred_gensqls',
     'json_shred_gettables',
     'json_table',
     'last_day',
     'least',
     'length',
     'lpad',
     'ltrim',
     'lzcomp',
     'lzcomp_l',
     'lzdecomp',
     'lzdecomp_l',
     'monthnumber_of_calendar',
     'monthnumber_of_quarter',
     'monthnumber_of_year',
     'months_between',
     'next_day',
     'ngram',
     'numfpfns',
     'numtodsinterval',
     'numtoyminterval',
     'nvl',
     'nvl2',
     'nvp',
     'nvp2json',
     'oadd_months',
     'ocount',
     'odelete',
     'oexists',
     'oextend',
     'ofirst',
     'olast',
     'olimit',
     'onext',
     'oprior',
     'oreplace',
     'otranslate',
     'otrim',
     'polygonsplit',
     'qbreservednamevalues',
     'qgexecuteforeignquery',
     'qgexecuteforeignquerycontract',
     'qginitiatorexport',
     'qginitiatorexportcontract',
     'qginitiatorimport',
     'qginitiatorimportcontract',
     'qgremoteexport',
     'qgremoteexportcontract',
     'qgremoteimport',
     'qgremoteimportcontract',
     'quarternumber_of_calendar',
     'quarternumber_of_year',
     'regexp_instr',
     'regexp_replace',
     'regexp_similar',
     'regexp_split_to_table',
     'regexp_substr',
     'regexp_substr_gpl',
     'reverse',
     'rotateleft',
     'rotateright',
     'round',
     'rpad',
     'rtrim',
     'schemaequal',
     'schemamatch',
     'script',
     'setbit',
     'shiftleft',
     'shiftright',
     'sign',
     'snappy_compress',
     'snappy_decompress',
     'strtok',
     'strtok_split_to_table',
     'subbitstr',
     'tdampcopy',
     'tdampcopy_contract',
     'td_array2p',
     'td_awtdpscache',
     'td_awtdpscachedump',
     'td_awtdpscachehash',
     'td_dbqlful',
     'td_dbqlparam',
     'td_filerrows',
     'td_friday',
     'td_gettimebucket',
     'td_get_cod_limits',
     'td_left',
     'td_lz_compress',
     'td_lz_decompress',
     'td_monday',
     'td_month_begin',
     'td_month_end',
     'td_normalize_meet',
     'td_normalize_overlap',
     'td_normalize_overlap_meet',
     'td_quarter_begin',
     'td_quarter_end',
     'td_right',
     'td_saturday',
     'td_sequenced_avg',
     'td_sequenced_count',
     'td_sequenced_sum',
     'td_spatialdistancekey',
     'td_spatialindexkey',
     'td_spatialmbbkey',
     'td_sum_normalize_meet',
     'td_sum_normalize_overlap',
     'td_sum_normalize_overlap_meet',
     'td_sunday',
     'td_thursday',
     'td_tuesday',
     'td_tunable',
     'td_unpivot',
     'td_unpivot_contract',
     'td_wednesday',
     'td_week_begin',
     'td_week_end',
     'td_year_begin',
     'td_year_end',
     'tessellate',
     'tessellate_search',
     'to_byte',
     'to_bytes',
     'to_char',
     'to_date',
     'to_dsinterval',
     'to_mgrs',
     'to_number',
     'to_timestamp',
     'to_timestamp_tz',
     'to_yminterval',
     'transunicodetoutf8',
     'transutf8tounicode',
     'trunc',
     'trycast',
     'ts_compress',
     'ts_decompress',
     'unnest',
     'weeknumber_of_calendar',
     'weeknumber_of_month',
     'weeknumber_of_quarter',
     'weeknumber_of_year',
     'xmlagg',
     'xmlclientfmttxt',
     'xmlcomment',
     'xmlconcat',
     'xmldocument',
     'xmlelement',
     'xmlforest',
     'xmlnormalize',
     'xmlpadkey',
     'xmlparse',
     'xmlpi',
     'xmlpublishtable',
     'xmlpublish_gensql',
     'xmlpublish_gen_canonical_sql',
     'xmlquery',
     'xmlserialize',
     'xmlsplit',
     'xmltable',
     'xmltext',
     'xmltransform',
     'xmlvalidate',
     'xslt_shredtb',
     'xslt_shred_gencanonical_sql',
     'xslt_shred_generate_sql',
     'xslt_shred_gettables',
     'xslt_xml2sql',
     'yearnumber_of_calendar',
   ];

   // these functions can
   const POSSIBLE_WITHOUT_PARENS = [
     "current_catalog",
     "current_date",
     "current_default_transform_group",
     "current_path",
     "current_role",
     "current_schema",
     "current_transform_group_for_type",
     "current_user",
     "session_user",
     "system_time",
     "system_user",
     "current_time",
     "localtime",
     "current_timestamp",
     "localtimestamp"
   ];

   // those exist to boost relevance making these very
   // "SQL like" keyword combos worth +1 extra relevance
   const COMBOS = [
     "create table",
     "insert into",
     "primary key",
     "foreign key",
     "not null",
     "alter table",
     "add constraint",
     "grouping sets",
     "on overflow",
     "character set",
     "respect nulls",
     "ignore nulls",
     "nulls first",
     "nulls last",
     "depth first",
     "breadth first"
   ];

   const FUNCTIONS = RESERVED_FUNCTIONS;

   const KEYWORDS = [...RESERVED_WORDS, ...NON_RESERVED_WORDS].filter((keyword) => {
     return !RESERVED_FUNCTIONS.includes(keyword);
   });

   const VARIABLE = {
     className: "variable",
     begin: /@[a-z0-9]+/,
   };

   const OPERATOR = {
     className: "operator",
     begin: /[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,
     relevance: 0,
   };

   const FUNCTION_CALL = {
     begin: regex.concat(/\b/, regex.either(...FUNCTIONS), /\s*\(/),
     relevance: 0,
     keywords: {
       built_in: FUNCTIONS
     }
   };

   // keywords with less than 3 letters are reduced in relevancy
   function reduceRelevancy(list, {exceptions, when} = {}) {
     const qualifyFn = when;
     exceptions = exceptions || [];
     return list.map((item) => {
       if (item.match(/\|\d+$/) || exceptions.includes(item)) {
         return item;
       } else if (qualifyFn(item)) {
         return `${item}|0`;
       } else {
         return item;
       }
     });
   }

   return {
     name: 'Teradata SQL',
     case_insensitive: true,
     // does not include {} or HTML tags `</`
     illegal: /[{}]|<\//,
     keywords: {
       $pattern: /\b[\w\.]+/,
       keyword:
         reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),
       literal: LITERALS,
       type: TYPES,
       built_in: POSSIBLE_WITHOUT_PARENS
     },
     contains: [
       {
         begin: regex.either(...COMBOS),
         relevance: 0,
         keywords: {
           $pattern: /[\w\.]+/,
           keyword: KEYWORDS.concat(COMBOS),
           literal: LITERALS,
           type: TYPES
         },
       },
       {
         className: "type",
         begin: regex.either(...MULTI_WORD_TYPES)
       },
       FUNCTION_CALL,
       VARIABLE,
       STRING,
       QUOTED_IDENTIFIER,
       hljs.C_NUMBER_MODE,
       hljs.C_BLOCK_COMMENT_MODE,
       COMMENT_MODE,
       OPERATOR
     ]
   };
 }

 module.exports = function(hljs) {
   hljs.registerLanguage('teradata-sql', hljsDefineTeradataSql);
 };

 module.exports.definer = hljsDefineTeradataSql;
